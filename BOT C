global n1, n2, c, d

from selenium import webdriver
import time
from webdriver.support.ui import Select
from webdriver.common.keys import Keys
from webdriver.common.by import By

answers = []
getresp = {}
response2 = {}

my_Tuple = (), final_response = ()
browser = webdriver.Chrome()
browser.get('http://127.0.0.1:5600')

from urllib2 import Request, urlopen

request = Request('https://private-anon-69d48bae69-airdcpp.apiary-mock.com/private_chat/session_id/messages/0')

response_body = urlopen(request).read()
print(response_body)

# Getting the request and the response from the BOT as asked in the questions


# now trying sending and requesting  messages with python extensions

import argparse
import json
import threading
import time

import urllib.request  # importing the request package to start the request and answer mechanisms in the BOT

# Spam a test message to event log once per minute

# Arguments

parser = argparse.ArgumentParser()

parser.add_argument("--apiUrl", help="API URL")
parser.add_argument("--name", help="Extension name")
parser.add_argument("--authToken", help="API session token")
parser.add_argument("--settingsPath", help="Setting directory")
parser.add_argument("--logPath", help="Log directory")
parser.add_argument("--debug", help="Enable debug mode", dest='debug', action='store_true')
parser.set_defaults(debug=False)

args = parser.parse_args()

# Initializing the API request

message = {
    'text': 'Test message sent by extension {}'.format(args.name),
    'severity': 'info'
}

postRequest = urllib.request.Request('http://' + args.apiUrl + 'events')
postRequest.add_header('Authorization', args.authToken)
postRequest.add_header('Content-Type', 'application/json')


# Sending the request to the game script

def sendmessage():
    threading.Timer(60.0, sendmessage).start()
    response = urllib.request.urlopen(postRequest, json.dumps(message).encode('utf-8'))
    sendm = {
        "method": "POST",
        "path": "/hubs/chat_message",
        "callback_id": 1,
        "data": {
            "text": "Sent through WebSocket",
            "hub_urls": ["adcs://myhub.com:4252"]
        }
    }



sendmessage()

# gettting the response from the BOT
def getresponse(): # to get the response from the user that is the bot

 B_response = response.read()
 BOT_response = B_response.decode('utf-8')  # decoding the request response asked previously
 getresp = {
    "code": 200,
    "callback_id": 1,
    "data": {
        "sent": 4
    }
 }

# this should get the response from the BOT for the required questions.


# code to get a response from the user. here the user should be the bot i am making. code to get the ANSWER
from urllib2 import Request, urlopen

request = Request('https://private-anon-69d48bae69-airdcpp.apiary-mock.com/events/0')


# creating the getsum() function to calculate the sum of the two numbers inside the tuple returned

def getsum():
    # function for  calculating the sum

    result = []
    for i in my_Tuple:
        tmp_sum = 0
        for j in i:
            tmp_sum += j
        result.append(tmp_sum)

        return result


def execute():
    i = 10  # playing upto 10 questions in the game
    my_Tuple = getresponse()  # calling the function getORIGNUM() for the two numbers returned from the game

    response_body = urlopen(request).read()

    print(getsum())
    getresponse()

    while (i):
        for res in result:
            send = browser.find.element_by_xpath(
                "//*[@id = 'sidebar-container']/div/div[2]/div/div[3]/div[1]/div[2]/div[1]/div/textarea")
            send.send_keys(res)
            click = browser.find_element_by_xpath(
                "//*[@id = 'sidebar-container']/div/div[3]/div[1]/div[2]/div[2]/div[1]/i")
            click.click()

        i += 1
        answers.clear()


